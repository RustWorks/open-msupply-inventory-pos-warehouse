fragment ProgramEnrolmentDocument on DocumentNode {
  id
  name
  parents
  author
  timestamp
  type
  data
  documentRegistry {
    uiSchemaType
    documentType
    context
    formSchemaId
    jsonSchema
    uiSchema
  }
}

fragment ProgramEnrolment on ProgramEnrolmentNode {
  type
  programPatientId
  patientId
  name
  enrolmentDatetime
  document {
    ...ProgramEnrolmentDocument
  }
}

query programEnrolmentById($storeId: String!, $programId: String!) {
  programEnrolments(
    storeId: $storeId
    filter: { id: { equalTo: $programId } }
  ) {
    ... on ProgramEnrolmentConnector {
      __typename
      nodes {
        ...ProgramEnrolment
      }
      totalCount
    }
  }
}

mutation insertProgramEnrolment(
  $storeId: String!
  $input: InsertProgramEnrolmentInput!
) {
  insertProgramEnrolment(storeId: $storeId, input: $input) {
    ... on ProgramEnrolmentNode {
      __typename
      ...ProgramEnrolment
    }
  }
}

mutation updateProgramEnrolment(
  $storeId: String!
  $input: UpdateProgramEnrolmentInput!
) {
  updateProgramEnrolment(storeId: $storeId, input: $input) {
    ... on ProgramEnrolmentNode {
      __typename
      ...ProgramEnrolment
    }
  }
}
