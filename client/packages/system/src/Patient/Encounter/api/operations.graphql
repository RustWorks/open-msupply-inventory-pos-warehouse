fragment EncounterDocumentRegistry on DocumentRegistryNode {
  context
  documentType
  formSchemaId
  id
  jsonSchema
  name
  parentId
  uiSchema
  uiSchemaType
}

fragment EncounterDocument on DocumentNode {
  id
  name
  parents
  author
  timestamp
  type
  data
  documentRegistry {
    ...EncounterDocumentRegistry
  }
}

fragment Encounter on EncounterNode {
  type
  name
  status
  patientId
  program
  startDatetime
  endDatetime
  document {
    ...EncounterDocument
  }
}

query encounters(
  $storeId: String!
  $key: EncounterSortFieldInput
  $desc: Boolean
  $filter: EncounterFilterInput
) {
  encounters(
    storeId: $storeId
    sort: { key: $key, desc: $desc }
    filter: $filter
  ) {
    ... on EncounterConnector {
      nodes {
        ...Encounter
      }
      totalCount
    }
  }
}

query encounterDocumentRegistries($filter: DocumentRegistryFilterInput) {
  documentRegistries(filter: $filter) {
    ... on DocumentRegistryConnector {
      nodes {
        ...EncounterDocumentRegistry
      }
      totalCount
    }
  }
}

mutation insertEncounter($storeId: String!, $input: InsertEncounterInput!) {
  insertEncounter(storeId: $storeId, input: $input) {
    ... on DocumentNode {
      __typename
      ...EncounterDocument
    }
  }
}

mutation updateEncounter($storeId: String!, $input: UpdateEncounterInput!) {
  updateEncounter(storeId: $storeId, input: $input) {
    ... on DocumentNode {
      __typename
      ...EncounterDocument
    }
  }
}
