fragment PatientRow on PatientNode {
  id
  code
  code2
  firstName
  lastName
  name
  dateOfBirth
  gender
  email
  document {
    data
    id
    name
    type
  }
  isDeceased
  programEnrolments {
    programEnrolmentId
    document {
      documentRegistry {
        name
      }
    }
  }
}

query patients(
  $storeId: String!
  $page: PaginationInput
  $sort: PatientSortInput
  $filter: PatientFilterInput
) {
  patients(storeId: $storeId, page: $page, sort: $sort, filter: $filter) {
    ... on PatientConnector {
      __typename
      nodes {
        ...PatientRow
      }
      totalCount
    }
  }
}

query patientById($storeId: String!, $nameId: String!) {
  patients(storeId: $storeId, filter: { id: { equalTo: $nameId } }) {
    ... on PatientConnector {
      __typename
      nodes {
        ...PatientRow
      }
      totalCount
    }
  }
}

query patientSearch($input: PatientSearchInput!, $storeId: String!) {
  patientSearch(input: $input, storeId: $storeId) {
    ... on PatientSearchConnector {
      __typename
      nodes {
        score
        patient {
          ...PatientRow
        }
      }
      totalCount
    }
  }
}

query centralPatientSearch(
  $input: CentralPatientSearchInput!
  $storeId: String!
) {
  centralPatientSearch(input: $input, storeId: $storeId) {
    __typename
    ... on CentralPatientSearchConnector {
      nodes {
        id
        code
        dateOfBirth
        firstName
        lastName
      }
      totalCount
    }
    ... on CentralPatientSearchError {
      error {
        __typename
        ... on ConnectionError {
          description
        }
      }
    }
  }
}

mutation linkPatientToStore($storeId: String!, $nameId: String!) {
  linkPatientToStore(nameId: $nameId, storeId: $storeId) {
    __typename
    ... on NameStoreJoinNode {
      id
      storeId
      nameId
    }
    ... on LinkPatientPatientToStoreError {
      error {
        __typename
        ... on ConnectionError {
          description
        }
      }
    }
  }
}

mutation insertProgramPatient(
  $storeId: String!
  $input: InsertProgramPatientInput!
) {
  insertProgramPatient(storeId: $storeId, input: $input) {
    ... on PatientNode {
      __typename
      ...PatientRow
    }
  }
}

mutation updateProgramPatient(
  $storeId: String!
  $input: UpdateProgramPatientInput!
) {
  updateProgramPatient(storeId: $storeId, input: $input) {
    ... on PatientNode {
      __typename
      ...PatientRow
    }
  }
}

mutation insertPatient($storeId: String!, $input: InsertPatientInput!) {
  insertPatient(storeId: $storeId, input: $input) {
    ... on PatientNode {
      __typename
      ...PatientRow
    }
  }
}

mutation updatePatient($storeId: String!, $input: UpdatePatientInput!) {
  updatePatient(storeId: $storeId, input: $input) {
    ... on PatientNode {
      __typename
      ...PatientRow
    }
  }
}
