fragment PatientRow on PatientNode {
  id
  code
  code2
  firstName
  lastName
  name
  dateOfBirth
  gender
  email
  document {
    id
    name
    type
  }
  isDeceased
}

fragment PatientDocument on DocumentRegistryNode {
  id
  documentType
  formSchemaId
  jsonSchema
  name
  context
  parentId
  uiSchema
  uiSchemaType
}

fragment PatientDocumentRegistry on DocumentRegistryNode {
  ...PatientDocument
  children {
    ...PatientDocument
  }
}

fragment ProgramEvent on ProgramEventNode {
  datetime
  name
  type
}

fragment ProgramEnrolmentRow on ProgramEnrolmentNode {
  enrolmentDatetime
  name
  patientId
  programPatientId
  type
  document {
    documentRegistry {
      id
      name
    }
  }
  events(filter: { datetime: { beforeOrEqualTo: $latestEventTime } }) {
    ...ProgramEvent
  }
}

fragment Patient on PatientNode {
  address1
  address2
  code
  code2
  country
  dateOfBirth
  document {
    id
    name
    type
  }
  email
  firstName
  lastName
  gender
  id
  name
  phone
  website
  isDeceased
}

query patients(
  $storeId: String!
  $key: PatientSortFieldInput!
  $desc: Boolean
  $first: Int
  $offset: Int
  $filter: PatientFilterInput
) {
  patients(
    storeId: $storeId
    page: { first: $first, offset: $offset }
    sort: { key: $key, desc: $desc }
    filter: $filter
  ) {
    ... on PatientConnector {
      __typename
      nodes {
        ...PatientRow
      }
      totalCount
    }
  }
}

query patientById($storeId: String!, $nameId: String!) {
  patients(storeId: $storeId, filter: { id: { equalTo: $nameId } }) {
    ... on PatientConnector {
      __typename
      nodes {
        ...Patient
      }
      totalCount
    }
  }
}

query patientSearch($input: PatientSearchInput!, $storeId: String!) {
  patientSearch(input: $input, storeId: $storeId) {
    ... on PatientSearchConnector {
      __typename
      nodes {
        score
        patient {
          ...Patient
        }
      }
      totalCount
    }
  }
}

query getDocumentHistory($storeId: String!, $name: String!) {
  documentHistory(storeId: $storeId, name: $name) {
    __typename
    ... on DocumentConnector {
      totalCount
      nodes {
        __typename
        author
        data
        id
        name
        parents
        timestamp
        type
      }
    }
  }
}

query programEnrolments(
  $storeId: String!
  $key: ProgramEnrolmentSortFieldInput!
  $desc: Boolean
  $filter: ProgramEnrolmentFilterInput
  $latestEventTime: String!
) {
  programEnrolments(
    storeId: $storeId
    sort: { key: $key, desc: $desc }
    filter: $filter
  ) {
    ... on ProgramEnrolmentConnector {
      __typename
      nodes {
        ...ProgramEnrolmentRow
      }
      totalCount
    }
  }
}

mutation insertPatient($storeId: String!, $input: InsertPatientInput!) {
  insertPatient(storeId: $storeId, input: $input) {
    ... on PatientNode {
      __typename
      ...PatientRow
    }
  }
}

mutation updatePatient($storeId: String!, $input: UpdatePatientInput!) {
  updatePatient(storeId: $storeId, input: $input) {
    ... on PatientNode {
      __typename
      ...PatientRow
    }
  }
}
