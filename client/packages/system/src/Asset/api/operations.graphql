fragment AssetCatalogueItem on AssetCatalogueItemNode {
  assetCategoryId
  assetClassId
  assetTypeId
  code
  id
  manufacturer
  model
  subCatalogue
  assetClass {
    name
  }
  assetCategory {
    name
  }
  assetType {
    name
  }
}

query assetCatalogueItems(
  $first: Int
  $offset: Int
  $key: AssetCatalogueItemSortFieldInput!
  $desc: Boolean
  $filter: ItemFilterInput
) {
  assetCatalogueItems(
    page: { first: $first, offset: $offset }
    sort: { key: $key, desc: $desc }
    filter: $filter
  ) {
    ... on AssetCatalogueItemConnector {
      nodes {
        ...AssetCatalogueItem
      }
      totalCount
    }
  }
}

query assetCatalogueItemById($assetCatalogueItemId: String!) {
  assetCatalogueItems(filter: { id: { equalTo: $assetCatalogueItemId } }) {
    ... on AssetCatalogueItemConnector {
      nodes {
        ...AssetCatalogueItem
      }
      totalCount
    }
  }
}

query assetClasses($sort: AssetClassSortInput) {
  assetClasses(sort: $sort) {
    ... on AssetClassConnector {
      nodes {
        id
        name
      }
      totalCount
    }
  }
}

query assetTypes($sort: AssetTypeSortInput, $filter: AssetTypeFilterInput) {
  assetTypes(sort: $sort, filter: $filter) {
    ... on AssetTypeConnector {
      nodes {
        id
        name
        categoryId
      }
      totalCount
    }
  }
}

query assetCategories(
  $sort: AssetCategorySortInput
  $filter: AssetCategoryFilterInput
) {
  assetCategories(sort: $sort, filter: $filter) {
    ... on AssetCategoryConnector {
      nodes {
        id
        name
        classId
      }
      totalCount
    }
  }
}

query assetCatalogueProperties($filter: AssetCataloguePropertyFilterInput) {
  assetCatalogueProperties(filter: $filter) {
    ... on AssetCataloguePropertyConnector {
      __typename
      nodes {
        allowedValues
        name
        id
        valueType
      }
    }
    ... on NodeError {
      __typename
    }
  }
}

mutation insertAssetCatalogueItem(
  $input: InsertAssetCatalogueItemInput!
  $storeId: String!
) {
  centralServer {
    assetCatalogue {
      insertAssetCatalogueItem(input: $input, storeId: $storeId) {
        ... on AssetCatalogueItemNode {
          id
        }
        ... on InsertAssetCatalogueItemError {
          __typename
          error {
            ... on UniqueValueViolation {
              __typename
              field
              description
            }
            ... on UniqueCombinationViolation {
              __typename
              fields
              description
            }
            ... on RecordAlreadyExist {
              __typename
              description
            }
            description
          }
        }
      }
    }
  }
}

mutation deleteAssetCatalogueItem($assetCatalogueItemId: String!) {
  centralServer {
    assetCatalogue {
      deleteAssetCatalogueItem(assetCatalogueItemId: $assetCatalogueItemId) {
        ... on DeleteResponse {
          id
        }
        ... on DeleteAssetCatalogueItemError {
          error {
            description
          }
        }
      }
    }
  }
}
