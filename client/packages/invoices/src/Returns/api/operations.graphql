fragment OutboundReturnRow on InvoiceNode {
  __typename
  id
  otherPartyName
  status
  invoiceNumber
  colour
  createdDatetime
}

fragment InboundReturnRow on InvoiceNode {
  __typename
  id
  otherPartyName
  status
  invoiceNumber
  colour
  createdDatetime
  deliveredDatetime
}

query outboundReturns(
  $first: Int
  $offset: Int
  $key: InvoiceSortFieldInput!
  $desc: Boolean
  $filter: InvoiceFilterInput
  $storeId: String!
) {
  invoices(
    page: { first: $first, offset: $offset }
    sort: { key: $key, desc: $desc }
    filter: $filter
    storeId: $storeId
  ) {
    ... on InvoiceConnector {
      __typename
      nodes {
        ...OutboundReturnRow
      }
      totalCount
    }
  }
}
query inboundReturns(
  $first: Int
  $offset: Int
  $key: InvoiceSortFieldInput!
  $desc: Boolean
  $filter: InvoiceFilterInput
  $storeId: String!
) {
  invoices(
    page: { first: $first, offset: $offset }
    sort: { key: $key, desc: $desc }
    filter: $filter
    storeId: $storeId
  ) {
    ... on InvoiceConnector {
      __typename
      nodes {
        ...InboundReturnRow
      }
      totalCount
    }
  }
}

# TODO: actually send the itemId!
query generateOutboundReturnLines(
  $stockLineIds: [String!]
  $storeId: String!
  $itemId: String
) {
  generateOutboundReturnLines(
    input: { stockLineIds: $stockLineIds }
    storeId: $storeId
  ) {
    availableNumberOfPacks
    batch
    expiryDate
    id
    itemCode
    itemName
    numberOfPacksToReturn
    packSize
    stockLineId
    comment
    reasonId
  }
}

query generateInboundReturnLines($stockLineIds: [String!], $storeId: String!) {
  generateInboundReturnLines(
    input: { stockLineIds: $stockLineIds }
    storeId: $storeId
  ) {
    batch
    expiryDate
    id
    itemCode
    itemName
    packSize
    stockLineId
    numberOfPacksReturned
    numberOfPacksIssued
    comment
    reasonId
  }
}

query invoiceByNumber($invoiceNumber: Int!, $storeId: String!) {
  invoiceByNumber(
    invoiceNumber: $invoiceNumber
    storeId: $storeId
    type: OUTBOUND_RETURN
  ) {
    ... on InvoiceNode {
      id
      invoiceNumber
      lines {
        nodes {
          id
        }
      }
      otherPartyName
      otherPartyStore {
        code
      }
    }
  }
}

mutation insertOutboundReturn($input: OutboundReturnInput!) {
  insertOutboundReturn(input: $input) {
    ... on InvoiceNode {
      __typename
      id
      invoiceNumber
    }
  }
}

mutation insertInboundReturn($storeId: String!, $input: InboundReturnInput!) {
  insertInboundReturn(storeId: $storeId, input: $input) {
    ... on InvoiceNode {
      __typename
      id
      invoiceNumber
    }
  }
}

mutation deleteOutboundReturns(
  $storeId: String!
  $input: [DeleteOutboundReturnInput!]!
) {
  deleteOutboundReturns(storeId: $storeId, input: $input) {
    __typename
    ... on DeletedIdsResponse {
      deletedIds
    }
  }
}

mutation deleteInboundReturns(
  $storeId: String!
  $input: [DeleteInboundReturnInput!]!
) {
  deleteInboundReturns(storeId: $storeId, input: $input) {
    __typename
    ... on DeletedIdsResponse {
      deletedIds
    }
  }
}
