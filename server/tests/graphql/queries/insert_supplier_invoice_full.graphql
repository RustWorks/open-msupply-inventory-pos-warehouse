mutation insertSupplierInvoice(
  $comment: String
  $id: String!
  $otherPartyId: String!
  $status: InvoiceNodeStatus!
  $theirReference: String
) {
  insertSupplierInvoice(
    input: {
      id: $id
      otherPartyId: $otherPartyId
      status: $status
      theirReference: $theirReference
      comment: $comment
    }
  ) {
    ...insertSupplierInvoiceError
    ...nodeError
    ...invoiceNode
  }
}

fragment insertSupplierInvoiceError on InsertSupplierInvoiceError {
  __typename
  error {
    description
    ... on DatabaseError {
      __typename
      description
      fullError
    }
    ... on ForeignKeyError {
      __typename
      description
      key
    }
    ... on OtherPartyNotASupplier {
      __typename
      description
      otherParty {
        code
        id
        isCustomer
        isSupplier
        name
      }
    }
    ... on RecordAlreadyExist {
      __typename
      description
    }
  }
}

fragment invoiceNode on InvoiceNode {
  comment
  confirmedDatetime
  entryDatetime
  finalisedDatetime
  id
  invoiceNumber
  lines {
    ...connectorError
    ...invoiceLineConnector
  }
  otherPartyId
  otherPartyName
  pricing {
    ...nodeError
    ...invoicePricingNode
  }
  status
  theirReference
  type
}

fragment invoicePricingNode on InvoicePricingNode {
  __typename
  totalAfterTax
}

fragment invoiceLineConnector on InvoiceLineConnector {
  nodes {
    batch
    costPricePerPack
    expiryDate
    id
    itemCode
    itemId
    itemName
    numberOfPacks
    packSize
    sellPricePerPack
    stockLine {
      ...nodeError
      ...stockLineNode
    }
  }
}

fragment stockLineNode on StockLineNode {
  id
  availableNumberOfPacks
  batch
  costPricePerPack
  expiryDate
  itemId
  packSize
  sellPricePerPack
  storeId
  totalNumberOfPacks
}

fragment nodeError on NodeError {
  __typename
  error {
    description
    ... on DatabaseError {
      __typename
      description
      fullError
    }
    ... on RecordNotFound {
      id
      description
    }
  }
}

fragment connectorError on ConnectorError {
  __typename
  error {
    description
    ... on DatabaseError {
      __typename
      description
      fullError
    }
    ... on PaginationError {
      __typename
      description
      rangeError {
        description
        field
        max
        min
      }
    }
  }
}
