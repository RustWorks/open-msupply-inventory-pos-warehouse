{
  "index": {
    "template": "template.html",
    "header": null,
    "footer": null,
    "query": "query.graphql"
  },
  "entries": {
    "template.html": {
      "type": "TeraTemplate",
      "data": {
        "output": "Html",
        "template": "{% set_global timezone = \"Pacific/Port_Moresby\" %}\n\n<style>\n  {% include \"style.css\" %}\n</style>\n\n<body>\n  <h1>Lost to Follow up</h1>\n  <h2>for</h2>\n  <h2>{{data.store.storeName}}</h2>\n  {% if data.store.logo %}\n  <div class=\"store-logo-container\">\n  <img class=\"logo\" id='store-logo' src='{{data.store.logo}}' />\n  </div>\n  {% endif %}\n\n  <div class=\"container\">\n  <table>\n    <thead>\n      <tr class=\"heading\">\n        <td>Next Appt.</td>\n        <td>Patient ID</td>\n        <td>First Name</td> \n        <td>Last Name</td>\n        <td>Sex</td>\n        <td>LTFU Status</td>\n        <td>Last Visit Date</td>\n        <td>DWM</td>\n        <td>Contact</td>\n      </tr>\n    </thead>\n    <tbody>\n    {% for patient in data.patients.nodes %}\n      {% if patient.programEnrolments | length > 0 %}\n        {% set enrolment = patient.programEnrolments.0 %}\n        {% set enrolmentEvents = enrolment.events | default(value=\"{}\") %}\n        {% set eventsByType = enrolmentEvents | default(value=[]) | group_by(attribute=\"type\") %}\n        \n        {% set encounterNotNull = enrolment.encounters.nodes.0 | default(value=\"{}\") %}\n        {% set encounterEventsByType = encounterNotNull.events | default(value=[]) | group_by(attribute=\"type\") %}\n\n        <tr>\n          <td>\n            {% if enrolment.nextScheduledEncounters.nodes.0 %}\n              {{enrolment.nextScheduledEncounters.nodes.0.startDatetime | date(format=\"%d/%m/%Y\",timezone=timezone)}}\n            {% endif %}\n          </td>\n          <td>{{enrolment.programEnrolmentId}}</td>               \n          <td>{{patient.firstName}}</td>\n          <td>{{patient.lastName}}</td>\n          <td>\n            {% if patient.gender == \"FEMALE\" %}\n              Female\n            {% elif patient.gender == \"MALE\" %}\n              Male\n            {% elif patient.gender == \"TRANSGENDER\" %}\n              Transgender\n            {% else %}\n              {{patient.gender}}\n            {% endif %}\n          </td>\n          <td>\n            {% if eventsByType.programStatus.0 %}\n              {{eventsByType.programStatus.0.data}}\n            {% endif %}\n          </td>\n          <td>\n            {% if enrolment.encounters.nodes.0 %}\n              {{enrolment.encounters.nodes.0.startDatetime | date(format=\"%d/%m/%Y\",timezone=timezone)}}\n            {% endif %}\n          </td>\n          <td>\n            {% if encounterEventsByType.arvMedicationEndOfSupply.0 %}\n              {% set endOfSupplySec = encounterEventsByType.arvMedicationEndOfSupply.0.data | date(format=\"%s\") | int %}\n              {% set nowSec = now() | date(format=\"%s\") | int %}\n              {% set diffDays = (nowSec - endOfSupplySec) / 60 / 60 / 24 | int %}\n              {{diffDays}}\n            {% endif %}\n          </td>\n          <td>{{patient.phone}}</td>\n        </tr>\n      {% endif %}\n    {% endfor %}\n    </tbody>\n  </table>\n  </div>\n</body>\n"
      }
    },
    "query.graphql": {
      "type": "GraphGLQuery",
      "data": {
        "query": "query LTFU($storeId: String, $now: String) {\n  store(id: $storeId) {\n    ... on StoreNode {\n      storeName\n      logo\n    }\n  }\n\n  patients(storeId: $storeId) {\n    ... on PatientConnector {\n      nodes {\n        firstName\n        lastName\n        gender\n        phone\n        programEnrolments(filter: { program: { equalTo: \"HIVCareProgram\" } }) {\n          programEnrolmentId\n          events(at: $now, filter: { type: { equalTo: \"programStatus\" } }) {\n            type\n            data\n          }\n          encounters(\n            page: { first: 1, offset: 0 }\n            sort: { key: startDatetime, desc: true }\n            filter: {\n              program: { equalTo: \"HIVCareProgram\" }\n              status: { equalTo: \"COMPLETED\" }\n              startDatetime: { beforeOrEqualTo: $now }\n            }\n          ) {\n            nodes {\n              events(\n                at: $now\n                filter: { type: { equalTo: \"arvMedicationEndOfSupply\" } }\n              ) {\n                type\n                data\n              }\n\n              startDatetime\n            }\n          }\n\n          nextScheduledEncounters: encounters(\n            page: { first: 1, offset: 0 }\n            sort: { key: startDatetime, desc: false }\n            filter: {\n              program: { equalTo: \"HIVCareProgram\" }\n              status: { equalTo: \"SCHEDULED\" }\n              startDatetime: { afterOrEqualTo: $now }\n            }\n          ) {\n            nodes {\n              startDatetime\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
        "variables": null
      }
    },
    "style.css": {
      "type": "Resource",
      "data": "@page {\n  margin: 0;\n  size: A4 landscape;\n}\n\nh1 {\n  width: fit-content;\n  margin: 7 auto;\n  padding: 0px 30px;\n  border: 2px solid black;\n  box-shadow: 5px 5px 0px black;\n  font-size: 15px;\n  margin-bottom: 10px;\n}\n\nh2 {\n  width: fit-content;\n  margin: 5 auto;\n  font-size: 15px;\n}\n\n.store-logo-container {\n  position: absolute;\n  top: 5;\n  right: 30;\n}\n\n.store-logo-container .logo {\n  display: block;\n  width: 70px;\n  height: 70px;\n}\n\n.container {\n  max-width: 1000px;\n  margin: auto;\n  padding: 10px;\n  border-top: 2px solid black;\n  font-size: 12px;\n  font-family: \"Helvetica Neue\", \"Helvetica\", Helvetica, Arial, sans-serif;\n  color: #555;\n}\n\n.container table {\n  width: 100%;\n  font-size: inherit;\n  font-family: inherit;\n  text-align: left;\n  margin-top: 10;\n  margin-bottom: 15;\n}\n\n.container table td {\n  padding: 5px;\n  vertical-align: top;\n}\n\n.container table tr.heading td {\n  font-weight: bold;\n  margin-bottom: 15px;\n}\n"
    }
  }
}
