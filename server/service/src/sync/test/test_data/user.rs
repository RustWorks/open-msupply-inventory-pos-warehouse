use repository::{LanguageType, UserAccountRow};

use crate::sync::test::TestSyncIncomingRecord;

const TABLE_NAME: &str = "user";

const USER1: (&str, &str) = (
    "user1",
    r#"{
    "active": true,
    "address_1": "",
    "address_2": "",
    "custom_data": {},
    "dashboard_tabs": {},
    "date_created": "2021-06-01",
    "date_left": "0000-00-00",
    "date_of_birth": "0000-00-00",
    "e_mail": "user1@test.com",
    "first_name": "User1",
    "group_ID": "",
    "ID": "user1",
    "initials": "UT",
    "is_group": false,
    "isInactiveAuthoriser": false,
    "job_title": "Support",
    "Language": 0,
    "last_name": "Test",
    "lastlogin": "2021-06-01",
    "lasttime": 23123,
    "ldap_login_string": "",
    "license_category_id": "",
    "mode": "",
    "name": "user1",
    "nblogins": 10,
    "permissions_spare": "",
    "phone1": "",
    "phone2": "",
    "qdump_offset_b": "",
    "receives_sms_errors": false,
    "responsible_officer": false,
    "Signature": "",
    "spare_1": "",
    "startup_method": "",
    "tags": {},
    "type": {},
    "use_ldap": false,
    "windows_user_name": ""
}"#,
);

const USER2: (&str, &str) = (
    "user2",
    r#"{
    "active": true,
    "address_1": "",
    "address_2": "",
    "custom_data": {},
    "dashboard_tabs": {},
    "date_created": "2021-06-01",
    "date_left": "0000-00-00",
    "date_of_birth": "0000-00-00",
    "e_mail": "user2@test.com",
    "first_name": "User2",
    "group_ID": "",
    "ID": "user2",
    "initials": "UT",
    "is_group": false,
    "isInactiveAuthoriser": false,
    "job_title": "Support",
    "Language": 1,
    "last_name": "Test",
    "lastlogin": "2021-06-01",
    "lasttime": 23123,
    "ldap_login_string": "",
    "license_category_id": "",
    "mode": "",
    "name": "user2",
    "nblogins": 10,
    "permissions_spare": "",
    "phone1": "",
    "phone2": "",
    "qdump_offset_b": "",
    "receives_sms_errors": false,
    "responsible_officer": false,
    "Signature": "",
    "spare_1": "",
    "startup_method": "",
    "tags": {},
    "type": {},
    "use_ldap": false,
    "windows_user_name": ""
}"#,
);

pub(crate) fn test_pull_upsert_records() -> Vec<TestSyncIncomingRecord> {
    vec![
        TestSyncIncomingRecord::new_pull_upsert(
            TABLE_NAME,
            USER1,
            UserAccountRow {
                id: USER1.0.to_owned(),
                username: "user1".to_string(),
                hashed_password: "".to_string(),
                email: Some("user1@test.com".to_string()),
                language: LanguageType::English,
                first_name: Some("User1".to_string()),
                last_name: Some("Test".to_string()),
                phone_number: None,
                job_title: Some("Support".to_string()),
                last_successful_sync: None,
            },
        ),
        TestSyncIncomingRecord::new_pull_upsert(
            TABLE_NAME,
            USER2,
            UserAccountRow {
                id: USER2.0.to_owned(),
                username: "user2".to_string(),
                hashed_password: "".to_string(),
                email: Some("user2@test.com".to_string()),
                language: LanguageType::French,
                first_name: Some("User2".to_string()),
                last_name: Some("Test".to_string()),
                phone_number: None,
                job_title: Some("Support".to_string()),
                last_successful_sync: None,
            },
        ),
    ]
}
